syntax = "v1"

info(
    title: "user management"
    desc: "user management api"
    author: "Ryan Su"
    email: "yuansu.china.work@gmail.com"
    version: "v1.0"
)

import "base.api"

type (
    // login request | 登录参数
    LoginReq {
        // Tenant Account | 租户账号
        // required: true
        // Max length: 20
        TenantAccount string `json:"tenant_account" validate:"alphanum,max=20"`
        // User Name | 用户名
        // Required: true
        // Max length: 20
        Username   string `json:"username" validate:"alphanum,max=20"`

        // Password | 密码
        // Required: true
        // Min length: 6
        // Max length: 30
        Password   string `json:"password" validate:"max=30,min=6"`

        // Captcha ID which store in redis | 验证码编号, 存在redis中
        // Required: true
        // Max length: 20
        CaptchaId  string `json:"captchaId"  validate:"len=20"`

        // The Captcha which users input | 用户输入的验证码
        // Required: true
        // Max length: 5
        Captcha    string `json:"captcha" validate:"len=5"`
    }

    // The log in response data | 登录返回数据
    LoginResp {
        BaseDataInfo

        // The log in information | 登陆返回的数据信息
        Data LoginInfo `json:"data"`
    }

    // The log in information | 登陆返回的数据信息
    LoginInfo {

        // Tenant's UUID | 租户的UUID
        TenantId     string          `json:"tenant_id"`

        // User's UUID | 用户的UUID
        UserId       string          `json:"userId"`

        // User's role information| 用户的角色信息
        // in: body
        Role         RoleInfoSimple  `json:"role"`

        // Token for authorization | 验证身份的token
        Token        string          `json:"token"`

        // Expire timestamp | 过期时间戳
        Expire       uint64          `json:"expire"`
    }

    // The profile information | 个人信息
    ProfileInfo {
        // user's nickname | 用户的昵称
        Nickname     string       `json:"nickname"`

        // The user's avatar path | 用户的头像路径
        Avatar       string       `json:"avatar"`

        // User's mobile phone number | 用户的手机号码
        Mobile       string       `json:"mobile"`

        // The user's email address | 用户的邮箱
        Email        string       `json:"email"`
    }

    // The profile response data | 个人信息返回数据
    ProfileResp {
        BaseDataInfo

        // The profile information | 个人信息
        Data ProfileInfo `json:"data"`
    }

    // The profile request data | 个人信息请求参数
    ProfileReq {
        // user's nickname | 用户的昵称
        // Max length: 10
        Nickname     string       `json:"nickname" validate:"omitempty,alphanumunicode,max=10"`

        // The user's avatar path | 用户的头像路径
        Avatar       string       `json:"avatar"`

        // User's mobile phone number | 用户的手机号码
        // Max length: 18
        Mobile       string       `json:"mobile" validate:"omitempty,numeric,max=18"`

        // The user's email address | 用户的邮箱
        // Max length: 100
        Email        string       `json:"email" validate:"omitempty,email,max=100"`
    }

    // The simple role data | 简单的角色数据
    // swagger:model RoleInfoSimple
    RoleInfoSimple {
        // Role name | 角色名
        RoleName   string `json:"roleName"`

        // Role value | 角色值
        Value      string `json:"value"`
    }

    // register request | 注册参数
    RegisterReq {
        // User Name | 用户名
        // Required: true
        // Max length: 20
        Username  string `json:"username" validate:"alphanum,max=20"`

        // Password | 密码
        // Required: true
        // Min length: 6
        // Max length: 30
        Password  string `json:"password" validate:"max=30,min=6"`

        // Captcha ID which store in redis | 验证码编号, 存在redis中
        // Required: true
        // Max length: 20
        CaptchaId string `json:"captchaId" validate:"len=20"`

        // The Captcha which users input | 用户输入的验证码
        // Required: true
        // Max length: 5
        Captcha   string `json:"captcha" validate:"len=5"`

        // The user's email address | 用户的邮箱
        // Required: true
        // Max length: 100
        Email     string `json:"email" validate:"email,max=100"`
    }

    // change user's password request | 修改密码请求参数
    ChangePasswordReq {
        // User's old password | 用户旧密码
        // Required: true
        // Max length: 30
        OldPassword string `json:"oldPassword" validate:"max=30"`

        // User's new password | 用户新密码
        // Required: true
        // Max length: 30
        NewPassword string `json:"newPassword" validate:"max=30"`
    }


    // The response data of user's information | 用户信息返回数据
    UserInfoResp {
        BaseInfo

        // User's UUID | 用户的UUID
        UUID         string       `json:"UUID"`

        // User Name | 用户名
        Username     string       `json:"username"`

        // User's nickname | 用户的昵称
        Nickname     string       `json:"nickname"`

        // User's mobile phone number | 用户的手机号码
        Mobile       string       `json:"mobile"`

        // User's role id | 用户的角色ID
        RoleId       uint64       `json:"roleId"`

        // The user's email address | 用户的邮箱
        Email        string       `json:"email"`

        // The user's avatar path | 用户的头像路径
        Avatar       string       `json:"avatar"`

        // The user's layout mode | 用户的布局
        SideMode     string       `json:"sideMode"`

        // The user's status | 用户状态
        // 1 normal, 2 ban | 1 正常 2 拉黑
        Status        uint64       `json:"status"`
    }

    // The response data of user's basic information | 用户基本信息返回数据
    GetUserInfoResp {
        BaseDataInfo

        // The  data of user's basic information | 用户基本信息
        Data UserBaseInfo `json:"data"`
    }

    Tanent {
        // tenant's UUID | 租户的UUID
        Tenant_Id    string      `json:"tenant_id"`
        // tenant's name | 租户的名称
        TenantName   string      `json:"tenant_name"`
    }

    // The  data of user's basic information | 用户基本信息
    UserBaseInfo {

        Tenants      []Tanent     `json:"tenants"`
 
        // User's UUID | 用户的UUID
        UUID         string       `json:"userId"`

        // User's name | 用户名
        Username     string       `json:"username"`

        // User's nickname | 用户的昵称
        Nickname     string       `json:"nickname"`

        // The user's avatar path | 用户的头像路径
        Avatar       string       `json:"avatar"`

        // User's role information| 用户的角色信息
        // in: body
        Roles   GetUserRoleInfo `json:"roles"`
    }

    // The response data of user's basic role information | 用户角色信息数据
    GetUserRoleInfo {
        // Role name | 角色名
        RoleName   string `json:"roleName"`

        // Role value for permission control | 角色值用于前端页面组件显示权限
        Value      string `json:"value"`
    }

    // The response data of user list | 用户列表返回数据
    UserListResp {
        BaseDataInfo

        // The user list data | 用户列表数据
        Data    UserListInfo  `json:"data"`
    }

    // The response data of user list | 用户列表数据
    UserListInfo {
        BaseListInfo

        // The user list data | 用户列表数据
        Data    []UserInfoResp  `json:"data"`
    }

    // The permission code for front end permission control | 权限码： 用于前端权限控制
    PermCodeResp {
        BaseDataInfo

        // Permission code data | 权限码数据
        Data []string `json:"data"`
    }

    // Create or update user information request | 创建或更新用户信息
    CreateOrUpdateUserReq {
        // User's id | 用户ID
        // Required: true
        Id           uint64        `json:"id" validate:"number"`

        // User Name | 用户名
        // Required: true
        // Max length: 30
        Username     string       `json:"username" validate:"alphanum,max=30"`

        // User's nickname | 用户的昵称
        // Required: true
        // Max length: 30
        Nickname     string       `json:"nickname" validate:"alphanumunicode,max=30"`

        // Password | 密码
        // Required: true
        // Max length: 30
        // Min length: 6
        Password     string       `json:"password" validate:"omitempty,max=30,min=6"`

        // User's mobile phone number | 用户的手机号码
        // Required: true
        // Max length: 18
        Mobile       string       `json:"mobile,optional" validate:"numeric,max=18"`

        // User's role id | 用户的角色ID
        // Required: true
        // Maximum: 1000
        RoleId       uint64       `json:"roleId" validate:"number,max=1000"`

        // The user's email address | 用户的邮箱
        // Required: true
        // Max length: 100
        Email        string       `json:"email" validate:"email,max=100"`

        // The user's avatar path | 用户的头像路径
        // Required: true
        // Example: https://localhost/static/1.png
        Avatar       string       `json:"avatar"`

        // The user's status | 用户状态
        // 1 normal, 2 ban | 1 正常 2 拉黑
        // Required: true
        // Maximum: 20
        Status       uint64      `json:"status" validate:"number,max=20"`
    }

    // Get user list request | 获取用户列表请求参数
    GetUserListReq {
        // Page number | 第几页
        // Required: true
        Page uint64 `json:"page" validate:"number"`

        // Page size | 单页数据行数
        // Required: true
        // Maximum: 100000
        PageSize uint64 `json:"pageSize" validate:"number,max=100000"`

        // User Name | 用户名
        // Max length: 20
        Username string `json:"username,optional" validate:"omitempty,alphanum,max=20"`

        // User's nickname | 用户的昵称
        // Max length: 10
        Nickname string `json:"nickname,optional" validate:"omitempty,alphanumunicode,max=10"`

        // User's mobile phone number | 用户的手机号码
        // Max length: 18
        Mobile string `json:"mobile,optional" validate:"omitempty,numeric,max=18"`

        // The user's email address | 用户的邮箱
        // Max length: 100
        Email string  `json:"email,optional" validate:"omitempty,email,max=100"`

        // User's role ID | 用户的角色ID
        // Maximum: 1000
        RoleId uint64 `json:"roleId,optional" validate:"omitempty,number,max=1000"`
    }
)

@server(
    group: user
)

service core {
    // Log in | 登录
    @handler login
    post /user/login (LoginReq) returns (LoginResp)

    // Register | 注册
    @handler register
    post /user/register (RegisterReq) returns (BaseMsgResp)
}

@server(
    group : user
    jwt : Auth
    middleware: Authority
)

service core {
    // Change Password | 修改密码
    @handler changePassword
    post /user/change-password (ChangePasswordReq) returns (BaseMsgResp)

    // Get user basic information | 获取用户基本信息
    @handler getUserInfo
    get /user/info returns (GetUserInfoResp)

    // Create or update user's information | 新增或更新用户
    @handler createOrUpdateUser
    post /user/create_or_update (CreateOrUpdateUserReq) returns (BaseMsgResp)

    // Get user list | 获取用户列表
    @handler getUserList
    post /user/list (GetUserListReq) returns (UserListResp)

    // Delete user information | 删除用户信息
    @handler deleteUser
    post /user/delete (IDReq) returns (BaseMsgResp)

     // Batch delete user information | 批量删除用户信息
    @handler batchDeleteUser
    post /user/batch_delete (IDsReq) returns (BaseMsgResp)

    // Get user's permission code | 获取用户权限码
    @handler getUserPermCode
    get /user/perm returns (PermCodeResp)

    // Get user's profile | 获取用户个人信息
    @handler getUserProfile
    get /user/profile returns (ProfileResp)

    // Update user's profile | 更新用户个人信息
    @handler updateUserProfile
    post /user/profile (ProfileReq) returns (BaseMsgResp)

    // Set user's status | 更新用户状态
    @handler updateUserStatus
    post /user/status (StatusCodeReq) returns (BaseMsgResp)

    // Log out | 退出登陆
    @handler logout
    get /user/logout returns (BaseMsgResp)
}
