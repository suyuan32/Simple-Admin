// Code generated by ent, DO NOT EDIT.

package user

import (
	"time"
)

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldUUID holds the string denoting the uuid field in the database.
	FieldUUID = "uuid"
	// FieldUsername holds the string denoting the username field in the database.
	FieldUsername = "username"
	// FieldPassword holds the string denoting the password field in the database.
	FieldPassword = "password"
	// FieldNickname holds the string denoting the nickname field in the database.
	FieldNickname = "nickname"
	// FieldSideMode holds the string denoting the side_mode field in the database.
	FieldSideMode = "side_mode"
	// FieldBaseColor holds the string denoting the base_color field in the database.
	FieldBaseColor = "base_color"
	// FieldActiveColor holds the string denoting the active_color field in the database.
	FieldActiveColor = "active_color"
	// FieldRoleID holds the string denoting the role_id field in the database.
	FieldRoleID = "role_id"
	// FieldMobile holds the string denoting the mobile field in the database.
	FieldMobile = "mobile"
	// FieldEmail holds the string denoting the email field in the database.
	FieldEmail = "email"
	// FieldAvatar holds the string denoting the avatar field in the database.
	FieldAvatar = "avatar"
	// EdgeTenant holds the string denoting the tenant edge name in mutations.
	EdgeTenant = "tenant"
	// Table holds the table name of the user in the database.
	Table = "sys_users"
	// TenantTable is the table that holds the tenant relation/edge. The primary key declared below.
	TenantTable = "tenant_users"
	// TenantInverseTable is the table name for the Tenant entity.
	// It exists in this package in order to avoid circular dependency with the "tenant" package.
	TenantInverseTable = "sys_tenant"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldStatus,
	FieldUUID,
	FieldUsername,
	FieldPassword,
	FieldNickname,
	FieldSideMode,
	FieldBaseColor,
	FieldActiveColor,
	FieldRoleID,
	FieldMobile,
	FieldEmail,
	FieldAvatar,
}

var (
	// TenantPrimaryKey and TenantColumn2 are the table columns denoting the
	// primary key for the tenant relation (M2M).
	TenantPrimaryKey = []string{"tenant_id", "user_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultStatus holds the default value on creation for the "status" field.
	DefaultStatus uint8
	// DefaultSideMode holds the default value on creation for the "side_mode" field.
	DefaultSideMode string
	// DefaultBaseColor holds the default value on creation for the "base_color" field.
	DefaultBaseColor string
	// DefaultActiveColor holds the default value on creation for the "active_color" field.
	DefaultActiveColor string
	// DefaultRoleID holds the default value on creation for the "role_id" field.
	DefaultRoleID uint64
	// DefaultAvatar holds the default value on creation for the "avatar" field.
	DefaultAvatar string
)
